//–°–ø–∏—Å–æ–∫ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–¥—É–∫—Ü–∏–∏

enum TypeSuitWear { sportSuit, officeSuit }

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–¥—É–∫—Ç–∞
abstract class Lightweight {
  final String wear;

  Lightweight(this.wear);

  void make();
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–¥—É–∫—Ç–∞
abstract class Textile {
  final String wear;

  Textile(this.wear);

  void make();
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–¥—É–∫—Ç–∞
abstract class Season {
  final String wear;

  Season(this.wear);

  void make();
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
class SportWearWeight extends Lightweight {
  SportWearWeight() : super('–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ—Å—Ç—é–º');
  @override
  void make() {
    print('–í–∏–≥–æ—Ç–æ–≤–ª—è—î–º–æ ü™° $wear –ø–æ –º–µ—Ç–æ–¥–∏—Ü—ñ Adidas Zero Sport Weight ü•∑ ');
  }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
class SportWearTextile extends Textile {
  SportWearTextile() : super('–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ—Å—Ç—é–º');
  @override
  void make() {
    print('–í–∏–≥–æ—Ç–æ–≤–ª—è—î–º–æ ü™° $wear –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó üá∫üá¶ –±–∞–≤–æ–≤–Ω–∏ üòâ');
  }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
class SportWearSeason extends Season {
  SportWearSeason() : super('–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π –∫–æ—Å—Ç—é–º');
  @override
  void make() {
    print('–í–∏–≥–æ—Ç–æ–≤–ª—è—î–º–æ ü™° $wear –¥–ª—è —Ö–æ–ª–æ–¥–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –Ω–∞ –≤—É–ª–∏—Ü—ñ ü•∂');
  }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
class OfficeWearWeight extends Lightweight {
  OfficeWearWeight() : super('–î—ñ–ª–æ–≤–∏–π –∫–æ—Å—Ç—é–º');
  @override
  void make() {
    print(
        '–í–∏–≥–æ—Ç–æ–≤–ª—è—î–º–æ ü™° $wear –ø–æ –º–µ—Ç–æ–¥–∏—Ü—ñ Armani Casual Office Super Mega Fashion from AliExpress üëî');
  }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
class OfficeWearTextile extends Textile {
  OfficeWearTextile() : super('–î—ñ–ª–æ–≤–∏–π –∫–æ—Å—Ç—é–º');
  @override
  void make() {
    print('–í–∏–≥–æ—Ç–æ–≤–ª—è—î–º–æ ü™° $wear –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó üá∫üá¶ –±–∞–≤–æ–≤–Ω–∏ üòâ');
  }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç
class OfficeWearSeason extends Season {
  OfficeWearSeason() : super('–î—ñ–ª–æ–≤–∏–π –∫–æ—Å—Ç—é–º');
  @override
  void make() {
    print('–í–∏–≥–æ—Ç–æ–≤–ª—è—î–º–æ ü™°$wear –¥–ª—è —Ö–æ–ª–æ–¥–∏—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –Ω–∞ –≤—É–ª–∏—Ü—ñ ü•∂');
  }
}

// –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –§–∞–±—Ä–∏–∫–∞ (–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞)
abstract class TypeWearAbstractFactory {
  factory TypeWearAbstractFactory(TypeSuitWear typeSuitWear) {
    switch (typeSuitWear) {
      case TypeSuitWear.sportSuit:
        return SportWearType();
      case TypeSuitWear.officeSuit:
        return OfficeWearType();
      default:
        throw ArgumentError();
    }
  }
  Lightweight getLightweight();
  Textile getTextile();
  Season getSeason();
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞)
class SportWearType implements TypeWearAbstractFactory {
  @override
  Lightweight getLightweight() {
    return SportWearWeight();
  }

  @override
  Textile getTextile() {
    return SportWearTextile();
  }

  @override
  Season getSeason() {
    return SportWearSeason();
  }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞)
class OfficeWearType implements TypeWearAbstractFactory {
  @override
  Lightweight getLightweight() {
    return OfficeWearWeight();
  }

  @override
  Textile getTextile() {
    return OfficeWearTextile();
  }

  @override
  Season getSeason() {
    return OfficeWearSeason();
  }
}

//–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–µ–∂–¥—ã
class Manufacture {
  final TypeWearAbstractFactory typeWear;
  Manufacture(this.typeWear);
  void makeSuit() {
    typeWear.getLightweight().make();
    typeWear.getTextile().make();
    typeWear.getSeason().make();
  }
}

void main() {
  final typeSuitWear = TypeSuitWear.officeSuit;
  final manufacture = Manufacture(TypeWearAbstractFactory(typeSuitWear));
  manufacture.makeSuit();
}
